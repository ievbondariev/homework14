DZ14

1. Создать 4 интерфейса с одинаковым методом по-умолчанию, но с различными реализациями. Также добавить в каждый
по-одному статическому методу и по 2 метода-контракта;
2. Создать 2 класса, каждый из которых будет имплементировать по 2 различных интерфейса(из 4х созданных ранее);
3. Предположительно, может быть проблема компиляции. Решить проблему удобным способом, чтобы программа работала
корректно;
4. В классе Main реализовать вызов всех возможных вызовов;

5. Создать класс-хелпер, который будет иметь один метод:
5.1. входящим параметром будет строка;
5.2. метод будет возвращать Optional;
5.3. если строка null/пустая/или не является email - возвращать пустой Optional;
5.4. если строка соответствует регулярному выражению(задать на свое усмотрение) и является email, то
возвращать Optional с этой строкой;
6. Вызвать в классе Main этот хелпер передав валидное значение и получить его;
7. Вызвать в классе Main этот хелпер передав не валидное значение и вызвать ошибку используя Optional функции;

8. Используя функциональные интерфейсы написать следующие функции:
8.1. Predicate: метод, который на вход принимает дробное значение зарплаты. Если это значение больше 1500.0,
то возвращает значение true;
8.2. Consumer: метод, который на вход принимает строку, преобразует ее в массив символов и потом печатает эти
символы в консоль в виде символов, а не строки;
8.3. Function: метод, который на вход принимает целое число от 1 до 10, а возвращает строку в соответствии этому
числу, только словом. Например: 3 -> “three”. Если число вне диапазона, то возвращать слово “unknown”;
8.4. Supplier: метод, который возвращает любое значение на Ваше усмотрение;